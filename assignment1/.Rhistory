C[length(C)] <- C[length(C)] + mean_distance(g)
}
L[length(L)] = L[length(L)]/(L[0]*N)
C[length(C)] = C[length(C)]/(C[0]*N)
}
L[0]
L
library(igraph)
x <- c(1:9 %o% 10^(-4:-1))
x <- append(x, 1.0)
N = 10
L <- c(1)
C <- c(1)
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + mean_distance(g)
}
L[length(L)] = L[length(L)]/(L[0]*N)
C[length(C)] = C[length(C)]/(C[0]*N)
}
L[length(L)] = L[length(L)]/(L[0])
L[length(L)] <- L[length(L)]/(L[0])
L[length(L)]/(L[0])
L[length(L)]
L[1]
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")/N
C[length(C)] = C[length(C)] + mean_distance(g)/N
}
L[length(L)] = L[length(L)]/(L[1])
C[length(C)] = C[length(C)]/(C[1])
}
plot(x, L)
plot(x, C)
N = 100
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")/N
C[length(C)] = C[length(C)] + mean_distance(g)/N
}
L[length(L)] = L[length(L)]/(L[1])
C[length(C)] = C[length(C)]/(C[1])
}
plot(x, L)
plot(x, C)
mean_distance(g)
g <- sample_smallworld(1,100,5,x[1])
mean_distance(g)
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")/N
C[length(C)] = C[length(C)] + mean_distance(g)/N
}
L[length(L)] = L[length(L)]
C[length(C)] = C[length(C)]
}
L <- L/L[1]
C <- C/C[1]
plot(x, L)
plot(x, C)
plot(x, L)
points(x,C)
plot(x, L, pch=16)
points(x, C, pch=0)
plot(x, L, pch=16, log='x')
points(x, C, pch=0)
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
x <- <- 10^(seq(-4,0,0.2))
x <- append(x, 1.0)
x <- 10^(seq(-4,0,0.2))
x <- append(x, 1.0)
N = 100
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x', label='L(p)/L(0)')
help("plot")
help("points")
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend(0,1,legend=c('L(p)/L(0)', 'C(p)/C(0)'))
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend(min(x),0.2,legend=c('L(p)/L(0)', 'C(p)/C(0)'))
legend("bottomleft",c('L(p)/L(0)', 'C(p)/C(0)'))
legend("bottomleft", insert=".02",c('L(p)/L(0)', 'C(p)/C(0)'))
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", insert=.02,c('L(p)/L(0)', 'C(p)/C(0)'))
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'))
N = 100
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(10,1000,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'))
N = 100
x <- 10^(seq(-4,0,0.2))
x <- append(x, 1.0)
N = 100
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(10,1000,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,1000,5,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'), pch=c(16,0))
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'), pch=c(16,0))
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
#g <- sample_smallworld(1,100,5,p)
g <- sample_gnp(100, p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'), pch=c(16,0))
p <- x[0]
p <- x[1]
g <- sample_gnp(100, p)
transitivity(g, "global")
average.path.length(g)
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'), pch=c(16,0))
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,1000,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,1000,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "global")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=16, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=0)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'), pch=c(16,0))
help(watts.strogatz.game)
??watts.strogatz.game
watts.strogatz.game
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('L(p)/L(0)', 'C(p)/C(0)'), pch=c(0,16))
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,4,p)
#g <- watts.strogatz.game(1,100,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
source("~/universidad/CSN/assignment1/assignment1.R")
x <- 10^(seq(-4,0,0.2))
x <- append(x, 1.0)
N = 1000
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,4,p)
#g <- watts.strogatz.game(1,100,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
ln(2)
log(10)
num_nodes = x <- 10^(seq(0,6,0.2))
ASP <- c()
for( n in num_nodes ){
ASP <- append(ASP, 0)
for(i in 1:N) {
g <- sample_gnp(n, (1+0.0001)*log(n)/n)
ASP[length(ASP)] = ASP[length(ASP)] + average.path.length(g)
}
ASP[length(ASP)] = ASP[length(ASP)]/N
}
N = 10
num_nodes = x <- 10^(seq(0,6,0.2))
ASP <- c()
for( n in num_nodes ){
ASP <- append(ASP, 0)
for(i in 1:N) {
g <- sample_gnp(n, (1+0.0001)*log(n)/n)
ASP[length(ASP)] = ASP[length(ASP)] + average.path.length(g)
}
ASP[length(ASP)] = ASP[length(ASP)]/N
}
x <- 10^(seq(-4,0,0.2))
N = 1000
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,4,p)
#g <- watts.strogatz.game(1,100,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,1000,4,p)
#g <- watts.strogatz.game(1,1000,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,1000,4,p)
#g <- watts.strogatz.game(1,1000,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
x <- 10^(seq(-4,0,0.2))
N = 100
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
g <- sample_smallworld(1,100,4,p)
#g <- watts.strogatz.game(1,100,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
L <- c()
C <- c()
for (p in x) {
L <- append(L,0)
C <- append(C,0)
for (i in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,100,4,p)
L[length(L)] = L[length(L)] + transitivity(g, "undirected")
C[length(C)] = C[length(C)] + average.path.length(g)
}
L[length(L)] = L[length(L)]/N
C[length(C)] = C[length(C)]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
[0]*10
c(0)*10
p <- 10^(seq(-4,0,0.2))
N = 100
L <- rep(0,length(x))
C <- rep(0,length(x))
for (i in 1:length(x)) {
for (j in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,100,4,p[i])
L[i] = L[i] + transitivity(g, "undirected")
C[i] = C[i] + average.path.length(g)
}
L[i] = L[i]/N
C[i] = C[i]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
p <- 10^(seq(-4,0,0.2))
N = 100
L <- rep(0,length(x))
C <- rep(0,length(x))
for (i in 1:length(x)) {
for (j in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,100,4,p[i])
L[i] = L[i] + transitivity(g, "undirected")/N
C[i] = C[i] + average.path.length(g)/N
}
#L[i] = L[i]/N
#C[i] = C[i]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
p <- 10^(seq(-4,0,0.01))
N = 100
L <- rep(0,length(x))
C <- rep(0,length(x))
for (i in 1:length(x)) {
for (j in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,100,4,p[i])
L[i] = L[i] + transitivity(g, "undirected")/N
C[i] = C[i] + average.path.length(g)/N
}
#L[i] = L[i]/N
#C[i] = C[i]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
p <- 10^(seq(-4,0,0.01))
N = 100
L <- rep(0,length(p))
C <- rep(0,length(p))
for (i in 1:length(x)) {
for (j in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,100,4,p[i])
L[i] = L[i] + transitivity(g, "undirected")/N
C[i] = C[i] + average.path.length(g)/N
}
#L[i] = L[i]/N
#C[i] = C[i]/N
}
L <- L/L[1]
C <- C/C[1]
plot(x, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(x, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
plot(p, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(p, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
for (i in 1:length(p)) {
for (j in 1:N) {
#g <- sample_smallworld(1,100,4,p)
g <- watts.strogatz.game(1,100,4,p[i])
L[i] = L[i] + transitivity(g, "undirected")/N
C[i] = C[i] + average.path.length(g)/N
}
#L[i] = L[i]/N
#C[i] = C[i]/N
}
L <- L/L[1]
C <- C/C[1]
plot(p, L, ylim = c(0,1), ylab='coeff', xlab='p', pch=0, log='x')
points(p, C, ylim = c(0,1), ylab='coeff', xlab='p', pch=16)
legend("bottomleft", inset=.02,c('C(p)/C(0)','L(p)/L(0)'), pch=c(0,16))
